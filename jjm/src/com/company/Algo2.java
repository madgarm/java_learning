package com.company;

public class Algo2 {

    public static void main(String[] args) {
        String[] names = {"China", "Russia", "USA", "Japan", "Spain", "Belarus", "Ukraine"};
        double[] data = {4.0, 7.0, 5.0, 3.0, 2.0, 1.0, 6.0};

        sortSales(names, data);

    }

    private static void printData(String[] names, double[] data) {
        System.out.print("{");
        for (int i = 0; i < names.length; i++) {
            System.out.print(names[i] + ": " + data[i] + ", ");
        }
        System.out.println("\b\b}");
    }

    private static void sortSales(String[] names, double[] data) {
        int m = 0; // служебная переменная-счетчик для проверки на наличие данных в массивах (читай дальше)

        if (names.length != data.length) { // проверка на сопоставимость массивов, длина их должна быть одинакова
            System.out.println("Corrupted Data"); // если нет - выводим "Corrupted Data"
        } else { // если же длина совпадает
            for (int i = 0; i < names.length; i++) { // задаем цикл по массиву названий стран
                if ((names[i] == "") && (data[i] == 0)) { // если под одним и тем же индексом в обоих массивах пусто
                    m += 1; // тогда увеличиваем служебный счетчик на 1
                }
            }
            if (m == names.length) {
                // если счетчик накрутил до значения равного длине массивов, т.е. в каждом значении обоих массивов пусто
                System.out.println("Empty Data"); // выводим "Empty Data"
            }

            /* служебные переменные для хранения минимального и максимального значения из массива Показателей для
            алгоритма сортировки */
            double maxData, minData;
            /* служебные переменные для хранения значений из массива Названий для алгоритма сортировки соответствующим
            минимальному и максимальному значениям из массива Показателей */
            String minNames, maxNames;
            /* служебные переменные для хранения индесов минимального и максимального значения из массива Показателей
            соотвутствующих минимальному и максимальному значениям из массива Показателей, то же для Названий */
            int maxDataId, minDataId;

            // реализуется алгоритм сортировки пузырьком, сортировка двунаправленная по возрастанию
            for (int i = 1; i <= data.length; i++) { // сортировка идет по массиву Показателей, первый "прогон"
                maxDataId = 0; // берем 0-й ID из массива Показателей для сравнения на максимальное значение
                maxData = data[maxDataId]; // и соответствующее ему значение из массива Показателей
                maxNames = names[maxDataId]; // и соответствующее ему значение из массива Названий
                minDataId = 0; // берем 0-й ID из массива Показателей для сравнения на минимальное значение
                minData = data[minDataId]; // и соответствующее ему значение из массива Показателей
                minNames = names[minDataId]; // и соответствующее ему значение из массива Названий

                for (int j = 1; j <= data.length - i; j++) { // сортируем первый элемент
                    if (data[j] > maxData) { // сравнение со следующим из внутреннего цикла, если больше
                        maxData = data[j]; // тогда в maxData записываем текущее значение из data
                        // в maxNames записываем текущее значение из names (соответствующее значению из data)
                        maxNames = names[j];
                        maxDataId = j; // запоминаем индекс текущего элемента, соответствующего максимальному
                    }
                    if (data[j] < minData) { // сравнение со следующим из внутреннего цикла, если меньше
                        minData = data[j]; // тогда в minData записываем текущее значение из data
                        // в minNames записываем текущее значение из names (соответствующее значению из data)
                        minNames = names[j];
                        minDataId = j; // запоминаем индекс текущего элемента, соответствующего минимальному
                    }
                }
                data[maxDataId] = data[data.length - i]; // на место максимального в Показателях ставим последний
                data[data.length - i] = maxData; // а на место последнего в Показателях ставим максимальный
                names[maxDataId] = names[data.length - i]; /* на место соответствующего максимальному в Названиях
                ставим последний синхронно изменениям в Показателях */
                names[names.length - i] = maxNames; /* а на место последнего в Названиях ставим соответствующий
                максимальному в Показателях синхронно */

                data[minDataId] = data[0]; // на место минимального в Показателях ставим 0-й
                data[0] = minData; // на 0-е в Показателях ставим значение соответствующее минимальному
                names[minDataId] = names[0]; /* на место в Названиях соответствующее минимимальному в Показателях
                ставим 0-е */
                names[0] = minNames; // на 0-е в Названиях ставим значение соответствующее минимальному из Показателей


                printData(names, data); // в конце выводим оба массива
            }
        }
    }
}
